name: "Build and Publish metarng package"
on: [push, workflow_dispatch]
#on:
  #workflow_dispatch:

jobs:
  build:
     runs-on: ubuntu-latest

     steps:
       - name: Checkout
         uses: actions/checkout@v3

       - name: Setup JFrog CLI
         uses: jfrog/setup-jfrog-cli@v3
         env:
           JF_URL: ${{ secrets.JF_URL }}
           JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

       - name: Configure Artifactory repo
         run: jf pip-config --repo-resolve=${{ vars.JF_PYPI_REPO }}

       - name: Configure Artifactory in non interactive mode authentication with an access key.
         run: jf c add --interactive=false --url=${{ secrets.JF_URL }} --access-token=${{ secrets.JF_ACCESS_TOKEN }}

       - name: Install dependencies for the metarng package
         run: jf pip install . --build-name=${{ vars.BUILD_NAME }} --build-number=1 --module=${{ vars.BUILD_NAME }}

       - name: Scan the source code before building
         run: jf audit --project ${{ vars.JF_PROJECT }}
       
       - name: Package the project, create distribution archives (tar.gz and whl)
         #run: python setup.py sdist bdist_wheel
         run: python setup.py bdist_wheel upload -r local
         
       - name: Scan the newly built binaries
         run: jf scan "dist/*" --project ${{ vars.JF_PROJECT }}

       - name: Upload the packages to the pypi repository in Artifactory
         run: jf rt u dist/ ${{ vars.JF_PYPI_REPO }} --build-name=${{ vars.BUILD_NAME }} --build-number=1 --module=${{ vars.BUILD_NAME }} --project=${{ vars.JF_PROJECT }}
  
       - name: Upload the collected environment variables from the build
         run: jf rt bce --project ${{ vars.JF_PROJECT }} ${{ vars.BUILD_NAME }} 1
         
       - name: Publish the build to the ${{ vars.JF_PROJECT }} project in Artifactory
         run: jf rt bp --project ${{ vars.JF_PROJECT }} ${{ vars.BUILD_NAME }} 1 

       - name: Upload the packages to the pypi repository in Artifactory
         run: jf pip install ${{ vars.JF_PROJECT }}

       - name: Upload the packages to the pypi repository in Artifactory
         run: pip show ${{ vars.JF_PROJECT }}
  
